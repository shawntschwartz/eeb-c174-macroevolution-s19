library(colordistancve)
library(colordistance)
install.packages("colordistance")
install.packages("pavo")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
getKMeanColors("~/Dropbox/machine_learning_fishes/randall/Scaridae/Chlorurus_Chlorurus gibbus_-1128176173.jpg", lower=c(0, 0, 0), upper=c(0.2, 0.2, 0.2))
img
source('~/.active-rstudio-document', echo=TRUE)
img
image_transparent(img, 'white')
print(image_transparent(img, 'white'))
source('~/.active-rstudio-document', echo=TRUE)
test
source('~/.active-rstudio-document', echo=TRUE)
?getKMeanColors
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install_github?
install_github?
install_github\
install_github
install.packages("devtools")
install_github
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
pavo
library.install(pavo)
packages.install("pavo")
package.install("pavo")
install.packages("pavo")
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
libary(sos)
library("sos")
install.packages("sos")
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
install.packages("rmarkdown")
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
rmarkdown?
d
?rmarkdown
render("12-28-2018-analyses-sschwartz.Rmd", html_document())
render
renderMarkdown
markdown::renderMarkdown("~/Developer/chaetodontidae_analysis/chaetodontidae_pilot/12-28-2018-analyses-sschwartz.Rmd", html_document())
setwd("/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("stargazer")
library(stargazer)
stargazer(cars)
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(stringr)
library(tidyverse)
setwd("~/Dropbox/ICB_Chaet_paper_2019")
#read in adjacency statistics
adj_stats_path <- "/Users/shawn/Dropbox/ICB_Chaet_paper_2019/1-28-2019-analyses_files/fish_adjacency_stats_table.csv"
adj_stats<- read.table(adj_stats_path, sep = ",", header=T, as.is=F)
adj_stats$name <- as.character(adj_stats$name)
#need to create a new column that is just the genus_species for table
str_split(adj_stats$name, "_")
adj_stats %>% separate(name, c(NA, "genus", "species", NA),sep = "_", remove = F) ->adj_stats
adj_stats$genus <- substr(adj_stats$genus, 0, 1)
adj_stats %>%
unite('species', c(genus, species)) -> adj_stats
setwd("~/Dropbox/ICB_Chaet_paper_2019")
#read in adjacency statistics
adj_stats_path <- "/Users/shawn/Dropbox/ICB_Chaet_paper_2019/1-28-2019-analyses_files/fish_adjacency_stats_table.csv"
adj_stats<- read.table(adj_stats_path, sep = ",", header=T, as.is=F)
adj_stats$name <- as.character(adj_stats$name)
#need to create a new column that is just the genus_species for table
str_split(adj_stats$name, "_")
adj_stats %>% separate(name, c(NA, "genus", "species", NA),sep = "_", remove = F) ->adj_stats
adj_stats$genus <- substr(adj_stats$genus, 0, 1)
adj_stats$binomial <- paste(adj_stats$genus, adj_stats$species, sep="_")
image_paths <- str_c("/Users/shawn/Dropbox/ICB_Chaet_paper_2019/images/curated_images/", adj_stats$name, ".png")
adj_stats$image_paths <- image_paths
knitter_path <- sprintf('![](%s){width=25%%}', image_paths)
adj_stats$knitter_path <-  knitter_path
select(adj_stats, knitter_path, species,m) %>% arrange(desc(m)) -> m_sorted
adj_stats
View(adj_stats)
View(adj_stats)
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(stringr)
library(tidyverse)
library(dplyr)
setwd("~/Dropbox/ICB_Chaet_paper_2019")
#read in adjacency statistics
adj_stats_path <- "/Users/shawn/Dropbox/ICB_Chaet_paper_2019/1-28-2019-analyses_files/fish_adjacency_stats_table.csv"
adj_stats<- read.table(adj_stats_path, sep = ",", header=T, as.is=F)
adj_stats$name <- as.character(adj_stats$name)
#need to create a new column that is just the genus_species for table
str_split(adj_stats$name, "_")
adj_stats %>% separate(name, c(NA, "genus", "species", NA),sep = "_", remove = F) ->adj_stats
adj_stats$genus <- substr(adj_stats$genus, 0, 1)
adj_stats$binomial <- paste(adj_stats$genus, adj_stats$species, sep="_")
image_paths <- str_c("/Users/shawn/Dropbox/ICB_Chaet_paper_2019/images/curated_images/", adj_stats$name, ".png")
adj_stats$image_paths <- image_paths
knitter_path <- sprintf('![](%s){width=25%%}', image_paths)
adj_stats$knitter_path <-  knitter_path
select(adj_stats, knitter_path, species,m) %>% arrange(desc(m)) -> m_sorted
View(adj_stats)
View(adj_stats)
names(adj_stats)[2] <- "Full.Genus"
names(adj_stats)[5] <- "ID"
select(adj_stats, knitter_path, species,m) %>% arrange(desc(m)) -> m_sorted
select(adj_stats, knitter_path, species,A) %>% arrange(desc(A)) -> A_sorted
select(adj_stats, knitter_path, species,Jc) %>% arrange(desc(Jc)) -> Jc_sorted
select(adj_stats, knitter_path, species,Jt) %>% arrange(desc(Jt)) -> Jt_sorted
select(adj_stats, knitter_path, species,m_dS) %>% arrange(desc(m_dS)) -> mS_sorted
select(adj_stats, knitter_path, species, m_dL) %>% arrange(desc(m_dL)) -> mL_sorted
m_sorted
select(adj_stats, knitter_path, binomial,m) %>% arrange(desc(m)) -> m_sorted
m_sorted
select(adj_stats, knitter_path, binomial,m) %>% arrange(desc(m)) -> m_sorted
select(adj_stats, knitter_path, binomial,A) %>% arrange(desc(A)) -> A_sorted
select(adj_stats, knitter_path, binomial,Jc) %>% arrange(desc(Jc)) -> Jc_sorted
select(adj_stats, knitter_path, binomial,Jt) %>% arrange(desc(Jt)) -> Jt_sorted
select(adj_stats, knitter_path, binomial,m_dS) %>% arrange(desc(m_dS)) -> mS_sorted
select(adj_stats, knitter_path, binomial, m_dL) %>% arrange(desc(m_dL)) -> mL_sorted
bind_cols(m_sorted, A_sorted, Jc_sorted, Jt_sorted) -> sorted_patterns
sorted_patterns
View(sorted_patterns)
View(sorted_patterns)
cols_to_plot <- list(m_sorted, A_sorted, Jc_sorted, Jt_sorted, mS_sorted, mL_sorted)
cols_to_plot
View(cols_to_plot)
View(cols_to_plot)
knitr::kable(cols_to_plot[1])
knitter_path
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("flextable")
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(stringr)
library(tidyverse)
library(dplyr)
library(flextable)
library(magrittr)
#test table
cols_to_plot[1] %>% autofit() %>%
width(j=~knitter_path, width = 1) %>% width(j=~binomial, width = 1) %>% width(j=~m, width = 1)
library(kableExtra)
library(flextable)
library(magrittr)
library(kableExtra)
#test table
cols_to_plot[1] %>% autofit() %>%
width(j=~knitter_path, width = 1) %>% width(j=~binomial, width = 1) %>% width(j=~m, width = 1)
knitr::kable(cols_to_plot[1], "html") %>%
kable_styling(full_width = F)
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(stringr)
library(tidyverse)
library(dplyr)
library(flextable)
library(magrittr)
library(kableExtra)
knitr::kable(cols_to_plot[1], format = "html", tabble.attr = "style='width:30%;'")
library(stargazer)
library(stringr)
library(tidyverse)
library(dplyr)
library(flextable)
library(magrittr)
library(kableExtra)
setwd("~/Dropbox/ICB_Chaet_paper_2019")
#read in adjacency statistics
adj_stats_path <- "/Users/shawn/Dropbox/ICB_Chaet_paper_2019/appendix_tables/fish_adjacency_stats_table_roa-mod.csv"
adj_stats<- read.table(adj_stats_path, sep = ",", header=T, as.is=F)
adj_stats$name <- as.character(adj_stats$name)
#need to create a new column that is just the genus_species for table
str_split(adj_stats$name, "_")
adj_stats %>% separate(name, c(NA, "genus", "species", NA),sep = "_", remove = F) ->adj_stats
adj_stats$genus <- substr(adj_stats$genus, 0, 1)
adj_stats$binomial <- paste(adj_stats$genus, adj_stats$species, sep="_")
image_paths <- str_c("/Users/shawn/Dropbox/ICB_Chaet_paper_2019/images/curated_images/", adj_stats$name, ".png")
adj_stats$image_paths <- image_paths
knitter_path <- sprintf('![](%s){width=25%%}', image_paths)
adj_stats$knitter_path <-  knitter_path
names(adj_stats)[2] <- "Full.Genus"
names(adj_stats)[5] <- "ID"
select(adj_stats, knitter_path, binomial,m) %>% arrange(desc(m)) -> m_sorted
select(adj_stats, knitter_path, binomial,A) %>% arrange(desc(A)) -> A_sorted
select(adj_stats, knitter_path, binomial,Jc) %>% arrange(desc(Jc)) -> Jc_sorted
select(adj_stats, knitter_path, binomial,Jt) %>% arrange(desc(Jt)) -> Jt_sorted
select(adj_stats, knitter_path, binomial,m_dS) %>% arrange(desc(m_dS)) -> mS_sorted
select(adj_stats, knitter_path, binomial, m_dL) %>% arrange(desc(m_dL)) -> mL_sorted
bind_cols(m_sorted, A_sorted, Jc_sorted, Jt_sorted) -> sorted_patterns
cols_to_plot <- list(m_sorted, A_sorted, Jc_sorted, Jt_sorted, mS_sorted, mL_sorted)
knitr::kable(cols_to_plot[1], format = "html", tabble.attr = "style='width:30%;'")
install.packages("cars")
install.packages("car")
?.car
??car
source('~/Developer/EEB-C174-Labs/Lab3/lab_three_class.R', echo=TRUE)
source('~/Developer/EEB-C174-Labs/Lab3/lab_three_class.R', echo=TRUE)
rm(list=ls())
#imports
library(ape)
library(phytools)
library(car)
#### Simulating Browninan Motion ####
# Setting up our parameters
sig2 <- 0.01 #sigma^2
n_steps <- 1:100 #number of steps (time)
# Fill a vector with a bunch of small steps
vec <- numeric(100) #going to fill this with each time step
for (i in n_steps)
{
small_step <- rnorm(n = 1, sd = sqrt(sig2))
vec[i + 1] <- vec[i] + small_step
}
plot(n_steps, vec[1:100], type = "1", ylim = c(-2, 2), ylab = "x", xlab = "t")
{
small_step <- rnorm(n = 1, sd = sqrt(sig2))
vec[i + 1] <- vec[i] + small_step
}
plot(n_steps, vec[1:100], type = "1", ylim = c(-2, 2), ylab = "x", xlab = "t")
source('~/Developer/EEB-C174-Labs/Lab3/lab_three_class.R', echo=TRUE)
plot(n_steps, vec[1:100], type = "1", ylim = c(-2, 2), ylab = "x", xlab = "t")
source('~/Developer/EEB-C174-Labs/Lab9/lab_nine_class.R', echo=TRUE)
source('~/Developer/EEB-C174-Labs/Lab9/lab_nine_class.R', echo=TRUE)
#check bamm assumptions
is.ultrametric(sample_tree)
is.binary(sample_tree)
min(sample_tree$edge.length) > 0
sample_data <- read.csv("sample_data.csv", header = TRUE)
write.table(sample_data, "sample_data.txt", row.names = FALSE, sep = "\t", quote = FALSE)
install.packages("rexpokit")
install.packages("cladoRcpp")
library(devtools)
devtools::install_github(repo="nmatzke/BioGeoBEARS")
# library BioGeoBEARS to load whatever you have currently installed
library(BioGeoBEARS)
# Find where this version of package is installed:
find.package(package="BioGeoBEARS")
# You might get something like:
# "/Library/Frameworks/R.framework/Resources/library/"
# Remove and detach the package
remove.packages(pkgs="BioGeoBEARS", lib="/Library/Frameworks/R.framework/Resources/library/")
detach("package:BioGeoBEARS") # (detach might not work or be needed, not sure)
# Repeat until library(BioGeoBEARS) says BioGeoBEARS is not installed:
library(BioGeoBEARS)
find.package(package="BioGeoBEARS")
remove.packages(pkgs="BioGeoBEARS", lib="/Users/nickm/Library/R/3.0/library/")
detach("package:BioGeoBEARS")
library(BioGeoBEARS)
find.package(package="BioGeoBEARS")
remove.packages(pkgs="BioGeoBEARS", lib="/Users/nickm/Library/R/3.1/library/")
detach("package:BioGeoBEARS")
# (Obviously, change the "lib" argument to match
# whatever find.package() returned)
# Once "clean", install BioGeoBEARS from GitHub (see above)
# and make sure you now have the latest version:
library(BioGeoBEARS)
packageVersion("BioGeoBEARS")
# If all the above fails, re-install R and install all packages afresh
# (DON'T install BioGeoBEARS from CRAN, install it from GitHub)
library(BioGeoBears)
install.packages("BioGeoBEARS")
