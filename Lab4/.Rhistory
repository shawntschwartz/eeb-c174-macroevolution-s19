library(colordistancve)
library(colordistance)
install.packages("colordistance")
install.packages("pavo")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
getKMeanColors("~/Dropbox/machine_learning_fishes/randall/Scaridae/Chlorurus_Chlorurus gibbus_-1128176173.jpg", lower=c(0, 0, 0), upper=c(0.2, 0.2, 0.2))
img
source('~/.active-rstudio-document', echo=TRUE)
img
image_transparent(img, 'white')
print(image_transparent(img, 'white'))
source('~/.active-rstudio-document', echo=TRUE)
test
source('~/.active-rstudio-document', echo=TRUE)
?getKMeanColors
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install_github?
install_github?
install_github\
install_github
install.packages("devtools")
install_github
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
pavo
library.install(pavo)
packages.install("pavo")
package.install("pavo")
install.packages("pavo")
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
libary(sos)
library("sos")
install.packages("sos")
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
install.packages("rmarkdown")
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
library(dplyr)
pca_k3 <- select(fish_adj_tbl_k_3, rowname, m_r, m_c, Sc, St, A)
# define paths
base.dir <- "/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/"
base.url <- "/"
fig.path <- "images/Chaetodontidae/"
# this is where figures will be sent
paste0(base.dir, fig.path)
rmarkdown?
d
?rmarkdown
render("12-28-2018-analyses-sschwartz.Rmd", html_document())
render
renderMarkdown
markdown::renderMarkdown("~/Developer/chaetodontidae_analysis/chaetodontidae_pilot/12-28-2018-analyses-sschwartz.Rmd", html_document())
setwd("/Users/shawn/Developer/chaetodontidae_analysis/chaetodontidae_pilot/")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("stargazer")
library(stargazer)
stargazer(cars)
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(stringr)
library(tidyverse)
setwd("~/Dropbox/ICB_Chaet_paper_2019")
#read in adjacency statistics
adj_stats_path <- "/Users/shawn/Dropbox/ICB_Chaet_paper_2019/1-28-2019-analyses_files/fish_adjacency_stats_table.csv"
adj_stats<- read.table(adj_stats_path, sep = ",", header=T, as.is=F)
adj_stats$name <- as.character(adj_stats$name)
#need to create a new column that is just the genus_species for table
str_split(adj_stats$name, "_")
adj_stats %>% separate(name, c(NA, "genus", "species", NA),sep = "_", remove = F) ->adj_stats
adj_stats$genus <- substr(adj_stats$genus, 0, 1)
adj_stats %>%
unite('species', c(genus, species)) -> adj_stats
setwd("~/Dropbox/ICB_Chaet_paper_2019")
#read in adjacency statistics
adj_stats_path <- "/Users/shawn/Dropbox/ICB_Chaet_paper_2019/1-28-2019-analyses_files/fish_adjacency_stats_table.csv"
adj_stats<- read.table(adj_stats_path, sep = ",", header=T, as.is=F)
adj_stats$name <- as.character(adj_stats$name)
#need to create a new column that is just the genus_species for table
str_split(adj_stats$name, "_")
adj_stats %>% separate(name, c(NA, "genus", "species", NA),sep = "_", remove = F) ->adj_stats
adj_stats$genus <- substr(adj_stats$genus, 0, 1)
adj_stats$binomial <- paste(adj_stats$genus, adj_stats$species, sep="_")
image_paths <- str_c("/Users/shawn/Dropbox/ICB_Chaet_paper_2019/images/curated_images/", adj_stats$name, ".png")
adj_stats$image_paths <- image_paths
knitter_path <- sprintf('![](%s){width=25%%}', image_paths)
adj_stats$knitter_path <-  knitter_path
select(adj_stats, knitter_path, species,m) %>% arrange(desc(m)) -> m_sorted
adj_stats
View(adj_stats)
View(adj_stats)
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(stringr)
library(tidyverse)
library(dplyr)
setwd("~/Dropbox/ICB_Chaet_paper_2019")
#read in adjacency statistics
adj_stats_path <- "/Users/shawn/Dropbox/ICB_Chaet_paper_2019/1-28-2019-analyses_files/fish_adjacency_stats_table.csv"
adj_stats<- read.table(adj_stats_path, sep = ",", header=T, as.is=F)
adj_stats$name <- as.character(adj_stats$name)
#need to create a new column that is just the genus_species for table
str_split(adj_stats$name, "_")
adj_stats %>% separate(name, c(NA, "genus", "species", NA),sep = "_", remove = F) ->adj_stats
adj_stats$genus <- substr(adj_stats$genus, 0, 1)
adj_stats$binomial <- paste(adj_stats$genus, adj_stats$species, sep="_")
image_paths <- str_c("/Users/shawn/Dropbox/ICB_Chaet_paper_2019/images/curated_images/", adj_stats$name, ".png")
adj_stats$image_paths <- image_paths
knitter_path <- sprintf('![](%s){width=25%%}', image_paths)
adj_stats$knitter_path <-  knitter_path
select(adj_stats, knitter_path, species,m) %>% arrange(desc(m)) -> m_sorted
View(adj_stats)
View(adj_stats)
names(adj_stats)[2] <- "Full.Genus"
names(adj_stats)[5] <- "ID"
select(adj_stats, knitter_path, species,m) %>% arrange(desc(m)) -> m_sorted
select(adj_stats, knitter_path, species,A) %>% arrange(desc(A)) -> A_sorted
select(adj_stats, knitter_path, species,Jc) %>% arrange(desc(Jc)) -> Jc_sorted
select(adj_stats, knitter_path, species,Jt) %>% arrange(desc(Jt)) -> Jt_sorted
select(adj_stats, knitter_path, species,m_dS) %>% arrange(desc(m_dS)) -> mS_sorted
select(adj_stats, knitter_path, species, m_dL) %>% arrange(desc(m_dL)) -> mL_sorted
m_sorted
select(adj_stats, knitter_path, binomial,m) %>% arrange(desc(m)) -> m_sorted
m_sorted
select(adj_stats, knitter_path, binomial,m) %>% arrange(desc(m)) -> m_sorted
select(adj_stats, knitter_path, binomial,A) %>% arrange(desc(A)) -> A_sorted
select(adj_stats, knitter_path, binomial,Jc) %>% arrange(desc(Jc)) -> Jc_sorted
select(adj_stats, knitter_path, binomial,Jt) %>% arrange(desc(Jt)) -> Jt_sorted
select(adj_stats, knitter_path, binomial,m_dS) %>% arrange(desc(m_dS)) -> mS_sorted
select(adj_stats, knitter_path, binomial, m_dL) %>% arrange(desc(m_dL)) -> mL_sorted
bind_cols(m_sorted, A_sorted, Jc_sorted, Jt_sorted) -> sorted_patterns
sorted_patterns
View(sorted_patterns)
View(sorted_patterns)
cols_to_plot <- list(m_sorted, A_sorted, Jc_sorted, Jt_sorted, mS_sorted, mL_sorted)
cols_to_plot
View(cols_to_plot)
View(cols_to_plot)
knitr::kable(cols_to_plot[1])
knitter_path
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("flextable")
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(stringr)
library(tidyverse)
library(dplyr)
library(flextable)
library(magrittr)
#test table
cols_to_plot[1] %>% autofit() %>%
width(j=~knitter_path, width = 1) %>% width(j=~binomial, width = 1) %>% width(j=~m, width = 1)
library(kableExtra)
library(flextable)
library(magrittr)
library(kableExtra)
#test table
cols_to_plot[1] %>% autofit() %>%
width(j=~knitter_path, width = 1) %>% width(j=~binomial, width = 1) %>% width(j=~m, width = 1)
knitr::kable(cols_to_plot[1], "html") %>%
kable_styling(full_width = F)
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(stringr)
library(tidyverse)
library(dplyr)
library(flextable)
library(magrittr)
library(kableExtra)
knitr::kable(cols_to_plot[1], format = "html", tabble.attr = "style='width:30%;'")
library(stargazer)
library(stringr)
library(tidyverse)
library(dplyr)
library(flextable)
library(magrittr)
library(kableExtra)
setwd("~/Dropbox/ICB_Chaet_paper_2019")
#read in adjacency statistics
adj_stats_path <- "/Users/shawn/Dropbox/ICB_Chaet_paper_2019/appendix_tables/fish_adjacency_stats_table_roa-mod.csv"
adj_stats<- read.table(adj_stats_path, sep = ",", header=T, as.is=F)
adj_stats$name <- as.character(adj_stats$name)
#need to create a new column that is just the genus_species for table
str_split(adj_stats$name, "_")
adj_stats %>% separate(name, c(NA, "genus", "species", NA),sep = "_", remove = F) ->adj_stats
adj_stats$genus <- substr(adj_stats$genus, 0, 1)
adj_stats$binomial <- paste(adj_stats$genus, adj_stats$species, sep="_")
image_paths <- str_c("/Users/shawn/Dropbox/ICB_Chaet_paper_2019/images/curated_images/", adj_stats$name, ".png")
adj_stats$image_paths <- image_paths
knitter_path <- sprintf('![](%s){width=25%%}', image_paths)
adj_stats$knitter_path <-  knitter_path
names(adj_stats)[2] <- "Full.Genus"
names(adj_stats)[5] <- "ID"
select(adj_stats, knitter_path, binomial,m) %>% arrange(desc(m)) -> m_sorted
select(adj_stats, knitter_path, binomial,A) %>% arrange(desc(A)) -> A_sorted
select(adj_stats, knitter_path, binomial,Jc) %>% arrange(desc(Jc)) -> Jc_sorted
select(adj_stats, knitter_path, binomial,Jt) %>% arrange(desc(Jt)) -> Jt_sorted
select(adj_stats, knitter_path, binomial,m_dS) %>% arrange(desc(m_dS)) -> mS_sorted
select(adj_stats, knitter_path, binomial, m_dL) %>% arrange(desc(m_dL)) -> mL_sorted
bind_cols(m_sorted, A_sorted, Jc_sorted, Jt_sorted) -> sorted_patterns
cols_to_plot <- list(m_sorted, A_sorted, Jc_sorted, Jt_sorted, mS_sorted, mL_sorted)
knitr::kable(cols_to_plot[1], format = "html", tabble.attr = "style='width:30%;'")
install.packages("cars")
install.packages("car")
?.car
??car
source('~/Developer/EEB-C174-Labs/Lab3/lab_three_class.R', echo=TRUE)
source('~/Developer/EEB-C174-Labs/Lab3/lab_three_class.R', echo=TRUE)
rm(list=ls())
#imports
library(ape)
library(phytools)
library(car)
#### Simulating Browninan Motion ####
# Setting up our parameters
sig2 <- 0.01 #sigma^2
n_steps <- 1:100 #number of steps (time)
# Fill a vector with a bunch of small steps
vec <- numeric(100) #going to fill this with each time step
for (i in n_steps)
{
small_step <- rnorm(n = 1, sd = sqrt(sig2))
vec[i + 1] <- vec[i] + small_step
}
plot(n_steps, vec[1:100], type = "1", ylim = c(-2, 2), ylab = "x", xlab = "t")
{
small_step <- rnorm(n = 1, sd = sqrt(sig2))
vec[i + 1] <- vec[i] + small_step
}
plot(n_steps, vec[1:100], type = "1", ylim = c(-2, 2), ylab = "x", xlab = "t")
source('~/Developer/EEB-C174-Labs/Lab3/lab_three_class.R', echo=TRUE)
plot(n_steps, vec[1:100], type = "1", ylim = c(-2, 2), ylab = "x", xlab = "t")
source('~/Developer/EEB-C174-Labs/Lab4/lab_four_homework_schwartz.R', echo=TRUE)
plot(carnivoran_tree, cex = 0.3)
plot(carnivoran_tree, cex = 0.2)
carnivoran_tree <- ladderize(carnivoran_tree)
plot(carnivoran_tree, cex = 0.2)
carnivoran_tree
carnivoran_trait
#clean up workspace
rm(list=ls())
cwd <- "~/Developer/EEB-C174-Labs/Lab4"
resources_path <- "resources/"
output_path <- "output/"
setwd(cwd)
#### Read in Tree and Trait Data ####
carnivoran_tree <- read.tree(paste0(resources_path,"carnivoran_tree.tre"))
carnivoran_trait <- read.csv(paste0(resources_path,"carnivoran_trait.csv"), header = TRUE, sep = ",")
carnivoran_SE <- read.csv(paste0(resources_path,"carnivoran_SE.csv"), header = TRUE, sep = ",")
#### Fit Models ####
#c1: fit models to cross sectional shape of the upper canine
carniv_fit_c1 <- fitContinuous(phy = carnivoran_tree, dat = carnivoran_trait$C1, SE = carnivoran_SE$C1, models = c("BM", "OU", "EB", "white"))
carnivoran_trait$C1
rm(list=ls())
cwd <- "~/Developer/EEB-C174-Labs/Lab4"
setwd(cwd)
#import tree
tree <- read.tree("resources/lab4_part1_tree.tre")
#### Simulate Data Under Several Different Models ####
# Simulate traits under a Brownian Motion Model
data1 <- rTrait(phy = tree, model = "BM", parameters = list(ancestral.state = 0, sigma2 = 0.1))
data1
data1[1]
data1[[1]
]
#clean up workspace
rm(list=ls())
cwd <- "~/Developer/EEB-C174-Labs/Lab4"
resources_path <- "resources/"
output_path <- "output/"
setwd(cwd)
#### Read in Tree and Trait Data ####
carnivoran_tree <- read.tree(paste0(resources_path,"carnivoran_tree.tre"))
carnivoran_trait <- read.csv(paste0(resources_path,"carnivoran_trait.csv"), header = TRUE, sep = ",")
carnivoran_SE <- read.csv(paste0(resources_path,"carnivoran_SE.csv"), header = TRUE, sep = ",")
carnivoran_trait
carnivoran_trait$C1
#### Fit Models ####
#c1: fit models to cross sectional shape of the upper canine
carniv_fit_c1 <- fitContinuous(phy = carnivoran_tree, dat = carnivoran_trait$C1, SE = carnivoran_SE$C1, models = c("BM", "OU", "EB", "white"))
data1 <- rTrait(phy = tree, model = "BM", parameters = list(ancestral.state = 0, sigma2 = 0.1))
data1 <- rTrait(phy = carnivoran_tree, model = "BM", parameters = list(ancestral.state = 0, sigma2 = 0.1))
data1
data1[[0]]
data1[[1]]
data1[1[1]]
#clean up workspace
rm(list=ls())
cwd <- "~/Developer/EEB-C174-Labs/Lab4"
resources_path <- "resources/"
output_path <- "output/"
setwd(cwd)
data1[1[1]]
#### Read in Tree and Trait Data ####
carnivoran_tree <- read.tree(paste0(resources_path,"carnivoran_tree.tre"))
carnivoran_trait <- read.csv(paste0(resources_path,"carnivoran_trait.csv"), header = TRUE, sep = ",")
carnivoran_SE <- read.csv(paste0(resources_path,"carnivoran_SE.csv"), header = TRUE, sep = ",")
#### Fit Models ####
#c1: fit models to cross sectional shape of the upper canine
C1_data <- carnivoran_trait$C1
names(C1_data) <- carnivoran_trait$Taxa
C1_data
C1_SE <- carnivoran_SE$C1
names(C1_SE) <- carnivoran_SE$Taxa
carniv_fit_c1 <- fitContinuous(phy = carnivoran_tree, dat = C1_data, SE = C1_SE, models = c("BM", "OU", "EB", "white"))
carniv_fit_c1 <- fitContinuous(phy = carnivoran_tree, dat = C1_data, SE = C1_SE, models = c("BM"))
carniv_fit_c1 <- fitContinuous(phy = carnivoran_tree, dat = C1_data, SE = C1_SE, model = c("BM"))
carniv_fit_c1 <- fitContinuous(phy = carnivoran_tree, dat = C1_data, SE = C1_SE, model = c("BM", "OU"))
carniv_fit_c1 <- fitContinuous(phy = carnivoran_tree, dat = C1_data, SE = C1_SE, model = c("BM", "OU", "white"))
cwd <- "~/Developer/EEB-C174-Labs/Lab4"
resources_path <- "resources/"
output_path <- "output/"
setwd(cwd)
#clean up workspace
rm(list=ls())
cwd <- "~/Developer/EEB-C174-Labs/Lab4"
resources_path <- "resources/"
output_path <- "output/"
setwd(cwd)
#### Read in Tree and Trait Data ####
carnivoran_tree <- read.tree(paste0(resources_path,"carnivoran_tree.tre"))
carnivoran_trait <- read.csv(paste0(resources_path,"carnivoran_trait.csv"), header = TRUE, sep = ",")
carnivoran_SE <- read.csv(paste0(resources_path,"carnivoran_SE.csv"), header = TRUE, sep = ",")
#### Fit Models ####
#c1: fit models to cross sectional shape of the upper canine
C1_data <- carnivoran_trait$C1
names(C1_data) <- carnivoran_trait$Taxa
C1_SE <- carnivoran_SE$C1
names(C1_SE) <- carnivoran_SE$Taxa
carniv_fit_c1.bm <- fitContinuous(phy = carnivoran_tree, dat = C1_data, SE = C1_SE, model = c("BM"))
carniv_fit_c1.ou <- fitContinuous(phy = carnivoran_tree, dat = C1_data, SE = C1_SE, model = c("OU"))
carniv_fit_c1.eb <- fitContinuous(phy = carnivoran_tree, dat = C1_data, SE = C1_SE, model = c("EB"))
carniv_fit_c1.white <- fitContinuous(phy = carnivoran_tree, dat = C1_data, SE = C1_SE, model = c("white"))
carniv_fit_c1.eb <- fitContinuous(phy = carnivoran_tree, dat = C1_data, SE = C1_SE, model = c("EB"))
source('~/Developer/EEB-C174-Labs/Lab4/lab_four_homework_schwartz.R', echo=TRUE)
carniv_fit_lncbrt_bodymass.bm <- fitContinuous(phy = carnivoran_tree, dat = lncbrt_bodymass_data, SE = lncbrt_bodymass_SE, models = c("BM"))
carniv_fit_lncbrt_bodymass.bm <- fitContinuous(phy = carnivoran_tree, dat = lncbrt_bodymass_data, SE = lncbrt_bodymass_SE, model = c("BM"))
carniv_fit_lncbrt_bodymass.ou <- fitContinuous(phy = carnivoran_tree, dat = lncbrt_bodymass_data, SE = lncbrt_bodymass_SE, model = c("OU"))
carniv_fit_lncbrt_bodymass.eb <- fitContinuous(phy = carnivoran_tree, dat = lncbrt_bodymass_data, SE = lncbrt_bodymass_SE, model = c("EB"))
carniv_fit_lncbrt_bodymass.white <- fitContinuous(phy = carnivoran_tree, dat = lncbrt_bodymass_data, SE = lncbrt_bodymass_SE, model = c("white"))
#### Compare Results Using AIC ####
c1.data <- c(carniv_fit_c1.bm$opt$aic, carniv_fit_c1.ou$opt$aic, carniv_fit_c1.eb$opt$aic, carniv_fit_c1.white$opt$aic)
rlga.data <- c(carniv_fit_RLGA.bm$opt$aic, carniv_fit_RLGA.ou$opt$aic, carniv_fit_RLGA.eb$opt$aic, carniv_fit_RLGA.white$opt$aic)
lncbrt.data <- c(carniv_fit_lncbrt_bodymass.bm$opt$aic, carniv_fit_lncbrt_bodymass.ou$opt$aic, carniv_fit_lncbrt_bodymass.eb$opt$aic, carniv_fit_lncbrt_bodymass.white$opt$aic)
AICresults <- rbind(c1.data, rlga.data, lncbrt.data)
colnames(AICresults) <- c("Brownian Motion", "Ornstein Uhlenbeck", "Early Burst", "White noise")
AICresults
write.csv(AICresults, file = paste0(output_path,"AICresults.csv"))
#transform AIC values into Akaike weights
##which can be interpreted as conditional probabilities for each model
AICw_c1_vals <- aicw(c1.data)
AICw_rlga_vals <- aicw(rlga.data)
AICw_lncbrt_vals <- aicw(lncbrt.data)
AICw_c1_vals
barplot(AICw_c1_vals[,3], names.arg = c("Brownian Motion", "Ornstein Uhlenbeck", "Early Burst", "White noise"), ylim = c(0,1), main = "Cross Sectional Shape of Upper Canine", cex.names = 0.7)
abline(h = 1, lty = "dashed")
barplot(AICw_rlga_vals[,3], names.arg = c("Brownian Motion", "Ornstein Uhlenbeck", "Early Burst", "White noise"), ylim = c(0,1), main = "Relative Upper Grinding Area", cex.names = 0.7)
abline(h = 1, lty = "dashed")
barplot(AICw_lncbrt_vals[,3], names.arg = c("Brownian Motion", "Ornstein Uhlenbeck", "Early Burst", "White noise"), ylim = c(0,1), main = "Log Cuberoot of Body Mass", cex.names = 0.7)
abline(h = 1, lty = "dashed")
pdf(paste0(output_path,"c1_AICw_barplot.pdf"))
barplot(AICw_c1_vals[,3], names.arg = c("Brownian Motion", "Ornstein Uhlenbeck", "Early Burst", "White noise"), ylim = c(0,1), main = "Cross Sectional Shape of Upper Canine", cex.names = 0.7)
abline(h = 1, lty = "dashed")
dev.off()
pdf(paste0(output_path,"rlga_AICw_barplot.pdf"))
barplot(AICw_rlga_vals[,3], names.arg = c("Brownian Motion", "Ornstein Uhlenbeck", "Early Burst", "White noise"), ylim = c(0,1), main = "Relative Upper Grinding Area", cex.names = 0.7)
abline(h = 1, lty = "dashed")
dev.off()
pdf(paste0(output_path,"lncbrt_AICw_barplot.pdf"))
barplot(AICw_lncbrt_vals[,3], names.arg = c("Brownian Motion", "Ornstein Uhlenbeck", "Early Burst", "White noise"), ylim = c(0,1), main = "Log Cuberoot of Body Mass", cex.names = 0.7)
abline(h = 1, lty = "dashed")
dev.off()
AICw_c1_vals
c1.data
write.csv(AICw_c1_vals, file = paste0(output_path,"AICw_c1_vals.csv"))
write.csv(AICw_rlga_vals, file = paste0(output_path,"AICw_rlga_vals.csv"))
write.csv(AICw_lncbrt_vals, file = paste0(output_path,"AICw_lncbrt_vals.csv"))
#### Disparity Through Time Plots ####
pdf(paste0(output_path,"c1_dtt_plot.pdf"))
c1.dtt <- dtt(phy = carnivoran_tree, data = c1.data, nsim = 100, index = c("avg.sq"), plot = TRUE)
#### Disparity Through Time Plots ####
pdf(paste0(output_path,"c1_dtt_plot.pdf"))
c1.dtt <- dtt(phy = carnivoran_tree, data = C1_data, nsim = 100, index = c("avg.sq"), plot = TRUE)
title("Cross Sectional Shape of Upper Canine")
dev.off()
pdf(paste0(output_path,"rlga_dtt_plot.pdf"))
c1.dtt <- dtt(phy = carnivoran_tree, data = RLGA_data, nsim = 100, index = c("avg.sq"), plot = TRUE)
title("Relative Upper Grinding Area")
dev.off()
pdf(paste0(output_path,"rlga_dtt_plot.pdf"))
rlga.dtt <- dtt(phy = carnivoran_tree, data = RLGA_data, nsim = 100, index = c("avg.sq"), plot = TRUE)
title("Relative Upper Grinding Area")
dev.off()
pdf(paste0(output_path,"lncbrt_dtt_plot.pdf"))
lncbrt.dtt <- dtt(phy = carnivoran_tree, data = lncbrt_bodymass_data, nsim = 100, index = c("avg.sq"), plot = TRUE)
title("Log Cuberoot of Body Mass")
dev.off()
