#read in adjacency statistics
adj_stats_path <- "/Users/shawn/Dropbox/ICB_Chaet_paper_2019/1-28-2019-analyses_files/fish_adjacency_stats_table.csv"
adj_stats<- read.table(adj_stats_path, sep = ",", header=T, as.is=F)
adj_stats$name <- as.character(adj_stats$name)
#need to create a new column that is just the genus_species for table
str_split(adj_stats$name, "_")
adj_stats %>% separate(name, c(NA, "genus", "species", NA),sep = "_", remove = F) ->adj_stats
adj_stats$genus <- substr(adj_stats$genus, 0, 1)
adj_stats$binomial <- paste(adj_stats$genus, adj_stats$species, sep="_")
image_paths <- str_c("/Users/shawn/Dropbox/ICB_Chaet_paper_2019/images/curated_images/", adj_stats$name, ".png")
adj_stats$image_paths <- image_paths
knitter_path <- sprintf('![](%s){width=25%%}', image_paths)
adj_stats$knitter_path <-  knitter_path
select(adj_stats, knitter_path, species,m) %>% arrange(desc(m)) -> m_sorted
adj_stats
View(adj_stats)
View(adj_stats)
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(stringr)
library(tidyverse)
library(dplyr)
setwd("~/Dropbox/ICB_Chaet_paper_2019")
#read in adjacency statistics
adj_stats_path <- "/Users/shawn/Dropbox/ICB_Chaet_paper_2019/1-28-2019-analyses_files/fish_adjacency_stats_table.csv"
adj_stats<- read.table(adj_stats_path, sep = ",", header=T, as.is=F)
adj_stats$name <- as.character(adj_stats$name)
#need to create a new column that is just the genus_species for table
str_split(adj_stats$name, "_")
adj_stats %>% separate(name, c(NA, "genus", "species", NA),sep = "_", remove = F) ->adj_stats
adj_stats$genus <- substr(adj_stats$genus, 0, 1)
adj_stats$binomial <- paste(adj_stats$genus, adj_stats$species, sep="_")
image_paths <- str_c("/Users/shawn/Dropbox/ICB_Chaet_paper_2019/images/curated_images/", adj_stats$name, ".png")
adj_stats$image_paths <- image_paths
knitter_path <- sprintf('![](%s){width=25%%}', image_paths)
adj_stats$knitter_path <-  knitter_path
select(adj_stats, knitter_path, species,m) %>% arrange(desc(m)) -> m_sorted
View(adj_stats)
View(adj_stats)
names(adj_stats)[2] <- "Full.Genus"
names(adj_stats)[5] <- "ID"
select(adj_stats, knitter_path, species,m) %>% arrange(desc(m)) -> m_sorted
select(adj_stats, knitter_path, species,A) %>% arrange(desc(A)) -> A_sorted
select(adj_stats, knitter_path, species,Jc) %>% arrange(desc(Jc)) -> Jc_sorted
select(adj_stats, knitter_path, species,Jt) %>% arrange(desc(Jt)) -> Jt_sorted
select(adj_stats, knitter_path, species,m_dS) %>% arrange(desc(m_dS)) -> mS_sorted
select(adj_stats, knitter_path, species, m_dL) %>% arrange(desc(m_dL)) -> mL_sorted
m_sorted
select(adj_stats, knitter_path, binomial,m) %>% arrange(desc(m)) -> m_sorted
m_sorted
select(adj_stats, knitter_path, binomial,m) %>% arrange(desc(m)) -> m_sorted
select(adj_stats, knitter_path, binomial,A) %>% arrange(desc(A)) -> A_sorted
select(adj_stats, knitter_path, binomial,Jc) %>% arrange(desc(Jc)) -> Jc_sorted
select(adj_stats, knitter_path, binomial,Jt) %>% arrange(desc(Jt)) -> Jt_sorted
select(adj_stats, knitter_path, binomial,m_dS) %>% arrange(desc(m_dS)) -> mS_sorted
select(adj_stats, knitter_path, binomial, m_dL) %>% arrange(desc(m_dL)) -> mL_sorted
bind_cols(m_sorted, A_sorted, Jc_sorted, Jt_sorted) -> sorted_patterns
sorted_patterns
View(sorted_patterns)
View(sorted_patterns)
cols_to_plot <- list(m_sorted, A_sorted, Jc_sorted, Jt_sorted, mS_sorted, mL_sorted)
cols_to_plot
View(cols_to_plot)
View(cols_to_plot)
knitr::kable(cols_to_plot[1])
knitter_path
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("flextable")
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(stringr)
library(tidyverse)
library(dplyr)
library(flextable)
library(magrittr)
#test table
cols_to_plot[1] %>% autofit() %>%
width(j=~knitter_path, width = 1) %>% width(j=~binomial, width = 1) %>% width(j=~m, width = 1)
library(kableExtra)
library(flextable)
library(magrittr)
library(kableExtra)
#test table
cols_to_plot[1] %>% autofit() %>%
width(j=~knitter_path, width = 1) %>% width(j=~binomial, width = 1) %>% width(j=~m, width = 1)
knitr::kable(cols_to_plot[1], "html") %>%
kable_styling(full_width = F)
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(stringr)
library(tidyverse)
library(dplyr)
library(flextable)
library(magrittr)
library(kableExtra)
knitr::kable(cols_to_plot[1], format = "html", tabble.attr = "style='width:30%;'")
library(stargazer)
library(stringr)
library(tidyverse)
library(dplyr)
library(flextable)
library(magrittr)
library(kableExtra)
setwd("~/Dropbox/ICB_Chaet_paper_2019")
#read in adjacency statistics
adj_stats_path <- "/Users/shawn/Dropbox/ICB_Chaet_paper_2019/appendix_tables/fish_adjacency_stats_table_roa-mod.csv"
adj_stats<- read.table(adj_stats_path, sep = ",", header=T, as.is=F)
adj_stats$name <- as.character(adj_stats$name)
#need to create a new column that is just the genus_species for table
str_split(adj_stats$name, "_")
adj_stats %>% separate(name, c(NA, "genus", "species", NA),sep = "_", remove = F) ->adj_stats
adj_stats$genus <- substr(adj_stats$genus, 0, 1)
adj_stats$binomial <- paste(adj_stats$genus, adj_stats$species, sep="_")
image_paths <- str_c("/Users/shawn/Dropbox/ICB_Chaet_paper_2019/images/curated_images/", adj_stats$name, ".png")
adj_stats$image_paths <- image_paths
knitter_path <- sprintf('![](%s){width=25%%}', image_paths)
adj_stats$knitter_path <-  knitter_path
names(adj_stats)[2] <- "Full.Genus"
names(adj_stats)[5] <- "ID"
select(adj_stats, knitter_path, binomial,m) %>% arrange(desc(m)) -> m_sorted
select(adj_stats, knitter_path, binomial,A) %>% arrange(desc(A)) -> A_sorted
select(adj_stats, knitter_path, binomial,Jc) %>% arrange(desc(Jc)) -> Jc_sorted
select(adj_stats, knitter_path, binomial,Jt) %>% arrange(desc(Jt)) -> Jt_sorted
select(adj_stats, knitter_path, binomial,m_dS) %>% arrange(desc(m_dS)) -> mS_sorted
select(adj_stats, knitter_path, binomial, m_dL) %>% arrange(desc(m_dL)) -> mL_sorted
bind_cols(m_sorted, A_sorted, Jc_sorted, Jt_sorted) -> sorted_patterns
cols_to_plot <- list(m_sorted, A_sorted, Jc_sorted, Jt_sorted, mS_sorted, mL_sorted)
knitr::kable(cols_to_plot[1], format = "html", tabble.attr = "style='width:30%;'")
install.packages("cars")
install.packages("car")
?.car
??car
source('~/Developer/EEB-C174-Labs/Lab3/lab_three_class.R', echo=TRUE)
source('~/Developer/EEB-C174-Labs/Lab3/lab_three_class.R', echo=TRUE)
rm(list=ls())
#imports
library(ape)
library(phytools)
library(car)
#### Simulating Browninan Motion ####
# Setting up our parameters
sig2 <- 0.01 #sigma^2
n_steps <- 1:100 #number of steps (time)
# Fill a vector with a bunch of small steps
vec <- numeric(100) #going to fill this with each time step
for (i in n_steps)
{
small_step <- rnorm(n = 1, sd = sqrt(sig2))
vec[i + 1] <- vec[i] + small_step
}
plot(n_steps, vec[1:100], type = "1", ylim = c(-2, 2), ylab = "x", xlab = "t")
{
small_step <- rnorm(n = 1, sd = sqrt(sig2))
vec[i + 1] <- vec[i] + small_step
}
plot(n_steps, vec[1:100], type = "1", ylim = c(-2, 2), ylab = "x", xlab = "t")
source('~/Developer/EEB-C174-Labs/Lab3/lab_three_class.R', echo=TRUE)
plot(n_steps, vec[1:100], type = "1", ylim = c(-2, 2), ylab = "x", xlab = "t")
rm(list=ls())
#imports
library(BAMMtools)
library(coda)
cwd <- "~/Developer/EEB-C174-Labs/Lab8/cetacean_BAMM"
setwd(cwd)
tree <- read.tree("whaleTree.tre")
tree <- ladderize(tree)
plot(x = tree, cex = 0.2, no.margin = T)
axisPhylo()
#check bamm assumptions
is.ultrametric(tree)
is.binary(tree)
min(tree$edge.length) > 0
edata <- getEventData(tree, eventdata = "2_expected_shifts/cetacean_bamm_homework_event_data.txt", burnin = 0.1, type = "trait")
summary(edata)
#### Assess MCMC convergence ####
mcmcout <- read.csv("2_expected_shifts/cetacean_bamm_homework_event_data.txt")
#### Assess MCMC convergence ####
mcmcout <- read.csv("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt")
plot(mcmcout$logLik ~ mcmcout$generation)
#### Assess MCMC convergence ####
mcmcout <- read.csv("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt")
plot(mcmcout$logLik ~ mcmcout$generation)
#### Test for convergence of the MCMC chains with the coda package for R ####
burnstart <- floor(0.1 * nrow(mcmcout))
postburn <- mcmcout[burnstart:nrow(mcmcout), ]
effectiveSize(postburn$N_shifts)
effectiveSize(postburn$logLik)
#### Analysis of rate shifts ####
plotPrior("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt", expectedNumberOfShifts = 2)
s <- plot.bammdata(edata, labels = T, font = 3, cex = 0.1, logcolor = T)
title(main = "Mean phenotypic rate", sub = "time before present")
addBAMMlegend(s, location = "left", nTicks = 1)
axisPhylo()
css <- credibleShiftSet(edata, expectedNumberOfShifts = 30, threshold = 5, set.limit = 0.95)
css$number.distinct
summary(css)
sss <- plot.credibleshiftset(css, border = F, logcolor = T)
plot.new()
best <- getBestShiftConfiguration(edata, expectedNumberOfShifts = 2)
best <- getBestShiftConfiguration(edata, expectedNumberOfShifts = 2)
ss <- plot.bammdata(best, labels = T, font = 3, cex = 0.1, logcolor = T)
title(main = "Best shift configuration", sub = "time before present")
addBAMMlegend(ss, location = "left", nTicks = 1)
addBAMMshifts(best, cex = 3, pch = 1)
axisPhylo()
#### scaled branch lengths ####
par(font = 1)
marg_probs <- marginalShiftProbsTree(edata)
plot.phylo(marg_probs, cex = 0.2, no.margin = T)
title(sub = "Marginal shift probability")
add.scale.bar(x = 0.5, y = 0.5, font = 1)
#### rate through time analysis ####
par(font = 1)
plotRateThroughTime(edata,
ratetype = "auto",
avgCol = "black", intervalCol = "gray80", intervals = c(0.05, 0.95), opacity = 1)
#### FiSSE ####
library(phangorn)
library(diversitree)
library(ape)
source("traitDependent_functions.R")
diet_data <- read.csv("whaleDiet.csv", header = TRUE, sep = ",")
head(diet_data)
traits <- diet_data$generalist
names(traits) <- diet_data$species
trait
traits
traits <- traits[tree$tip.label]
traits
#### plot tree with trait labels on tips ####
colvec <- rep("white", length(traits))
colvec[traits == 1] <- "black"
plot.phylo(tree, show.tip.label = F, no.margin = T)
tiplabels(pch = 21, bg = colvec, cex = 0.6)
res <- FISSE.binary(tree, traits)
res
diet <- read.csv(file = "whaleDiet.csv", stringsAsFactors = F)
generalist <- diet$generalist
names(generalist) <- diet$species
generalist <- generalist[tree$tip.label]
colvec <- rep("white", length(generalist))
colvec[generalist == 1] <- "black"
plot.phylo(tree, show.tip.label = F, no.margin = T)
tiplabels(pch = 21, bg = colvec, cex = 0.8)
source('~/Developer/EEB-C174-Labs/Lab8/cetacean_BAMM/lab_eight_homework_schwartz.R', echo=TRUE)
# two-tailed pvalue is obtained as
pval_2tailed <- min(res$pval, 1 - res$pval) * 2
pval_2tailed
#### scaled branch lengths ####
par(font = 1)
marg_probs <- marginalShiftProbsTree(edata)
plot.phylo(marg_probs, cex = 0.6, no.margin = T)
title(sub = "Marginal shift probability")
add.scale.bar(x = 0.5, y = 0.5, font = 1)
#### scaled branch lengths ####
par(font = 1)
marg_probs <- marginalShiftProbsTree(edata)
plot.phylo(marg_probs, cex = 0.5, no.margin = T)
title(sub = "Marginal shift probability")
add.scale.bar(x = 0.5, y = 0.5, font = 1)
#### scaled branch lengths ####
par(font = 1)
marg_probs <- marginalShiftProbsTree(edata)
plot.phylo(marg_probs, cex = 0.45, no.margin = T)
title(sub = "Marginal shift probability")
add.scale.bar(x = 0.5, y = 0.5, font = 1)
ltt.plot(tree, log = "y")
lines(c(0, 1), c(log(2), log(100)), lty = "dashed", lwd = 2, col = "red")
ltt_plots[[1]]$gamma
ltt_plots <- ltt(trees)
ltt_plots[[1]]$gamma
library(geiger)
library(apTreeshape)
library(phytools)
ltt.plot(tree, log = "y")
lines(c(0, 1), c(log(2), log(100)), lty = "dashed", lwd = 2, col = "red")
ltt_plots <- ltt(trees)
source('~/Developer/EEB-C174-Labs/Lab8/cetacean_BAMM/lab_eight_homework_schwartz.R', echo=TRUE)
ltt_plots <- ltt(tree)
ltt_plots[[1]]$gamma
ltt_plots
tree
ltt_plots[[1]]
ltt_plots[[1]]$gamma
gammaStat(tree)
axisPhylo()
diet <- read.csv(file = "whaleDiet.csv", stringsAsFactors = F)
generalist <- diet$generalist
names(generalist) <- diet$species
generalist <- generalist[tree$tip.label]
colvec <- rep("white", length(generalist))
colvec[generalist == 1] <- "black"
plot.phylo(tree, show.tip.label = F, no.margin = T)
tiplabels(pch = 21, bg = colvec, cex = 0.8)
axisPhylo()
plot.phylo(tree, show.tip.label = F, no.margin = F)
tiplabels(pch = 21, bg = colvec, cex = 0.8)
axisPhylo()
plot.phylo(tree, show.tip.label = F, no.margin = T)
tiplabels(pch = 21, bg = colvec, cex = 0.8)
axisPhylo()
plot.phylo(tree, show.tip.label = F, no.margin = T)
tiplabels(pch = 21, bg = colvec, cex = 0.8)
plot.phylo(tree, show.tip.label = F, no.margin = T)
tiplabels(pch = 21, bg = colvec, cex = 0.8)
plot.phylo(tree, show.tip.label = T, no.margin = T)
tiplabels(pch = 21, bg = colvec, cex = 0.8)
plot.phylo(tree, show.tip.label = T, no.margin = T)
tiplabels(pch = 21, bg = colvec, cex = 0.4)
plot.phylo(tree, show.tip.label = T, cex = 0.4, no.margin = T)
tiplabels(pch = 21, bg = colvec, cex = 0.8)
plot.phylo(tree, show.tip.label = F, cex = 0.4, no.margin = T)
tiplabels(pch = 21, bg = colvec, cex = 0.8)
#two planel plot for lab report
par(mfrow = c(1,2))
par(mar=c(5, 1.0, 2, 0.0))
plotPrior("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt", expectedNumberOfShifts = 2)
s <- plot.bammdata(edata, labels = T, font = 3, cex = 0.1, logcolor = T)
#two planel plot for lab report
par(mfrow = c(1,2))
par(mar=c(5, 1.0, 2, 0.0))
#plotPrior("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt", expectedNumberOfShifts = 2)
s <- plot.bammdata(edata, labels = T, font = 3, cex = 0.1, logcolor = T)
title(main = "Mean phenotypic rate", sub = "time before present (my)")
addBAMMlegend(s, location = "left", nTicks = 1)
axisPhylo()
par(font = 1)
marg_probs <- marginalShiftProbsTree(edata)
plot.phylo(marg_probs, cex = 0.45, no.margin = T)
title(sub = "Marginal shift probability")
add.scale.bar(x = 0.5, y = 0.5, font = 1)
#two planel plot for lab report
par(mfrow = c(1,2))
par(mar=c(5, 1.0, 2, 0.0))
#plotPrior("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt", expectedNumberOfShifts = 2)
s <- plot.bammdata(edata, labels = T, font = 3, cex = 0.1, logcolor = T)
title(main = "Mean phenotypic rate", sub = "time before present (my)")
addBAMMlegend(s, location = "topleft", nTicks = 1)
addBAMMlegend(s, location = "bottomleft", nTicks = 1)
#plotPrior("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt", expectedNumberOfShifts = 2)
s <- plot.bammdata(edata, labels = T, font = 3, cex = 0.4, logcolor = T)
title(main = "Mean phenotypic rate", sub = "time before present (my)")
#two planel plot for lab report
par(mfrow = c(1,2))
par(mar=c(5, 1.0, 2, 0.0))
#plotPrior("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt", expectedNumberOfShifts = 2)
s <- plot.bammdata(edata, labels = T, font = 3, cex = 0.35, logcolor = T)
title(main = "Mean phenotypic rate", sub = "time before present (my)")
addBAMMlegend(s, location = "bottomleft", nTicks = 1)
axisPhylo()
addBAMMlegend(s, location = "middleleft", nTicks = 1)
addBAMMlegend(s, location = "midleft", nTicks = 1)
addBAMMlegend(s, location = "bottomright", nTicks = 1)
addBAMMlegend(s, location = "right", nTicks = 1)
addBAMMlegend(s, location = "left", nTicks = 1)
#two planel plot for lab report
par(mfrow = c(1,2))
par(mar=c(5, 1.0, 2, 0.0))
#plotPrior("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt", expectedNumberOfShifts = 2)
s <- plot.bammdata(edata, labels = T, font = 3, cex = 0.35, logcolor = T)
title(main = "Mean phenotypic rate", sub = "time before present (my)")
addBAMMlegend(s, location = "left", nTicks = 1)
axisPhylo()
par(font = 1)
marg_probs <- marginalShiftProbsTree(edata)
plot.phylo(marg_probs, cex = 0.45, no.margin = T)
title(sub = "Marginal shift probability")
#two planel plot for lab report
par(mfrow = c(1,2))
par(mar=c(5, 1.0, 2, 0.0))
#plotPrior("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt", expectedNumberOfShifts = 2)
s <- plot.bammdata(edata, labels = T, font = 3, cex = 0.35, logcolor = T)
title(main = "Mean phenotypic rate", sub = "time before present (my)")
addBAMMlegend(s, location = "left", nTicks = 1)
axisPhylo()
#par(font = 1)
marg_probs <- marginalShiftProbsTree(edata)
plot.phylo(marg_probs, cex = 0.45, no.margin = T)
title(sub = "Marginal shift probability")
add.scale.bar(x = 0.5, y = 0.5, font = 1)
#two planel plot for lab report
par(mfrow = c(1,2))
par(mar=c(5, 1.0, 2, 0.0))
#plotPrior("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt", expectedNumberOfShifts = 2)
s <- plot.bammdata(edata, labels = T, font = 3, cex = 0.35, logcolor = T)
title(main = "Mean phenotypic rate", sub = "time before present (my)")
addBAMMlegend(s, location = "left", nTicks = 1)
axisPhylo()
#par(font = 1)
marg_probs <- marginalShiftProbsTree(edata)
plot.phylo(marg_probs, cex = 0.55)
title(main = "Marginal shift probability")
add.scale.bar(x = 1.5, y = 0.0, font = 1)
#two planel plot for lab report
par(mfrow = c(1,2))
par(mar=c(5, 1.0, 2, 0.0))
#plotPrior("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt", expectedNumberOfShifts = 2)
s <- plot.bammdata(edata, labels = T, font = 3, cex = 0.35, logcolor = T)
title(main = "Mean phenotypic rate", sub = "time before present (my)")
addBAMMlegend(s, location = "left", nTicks = 1)
axisPhylo()
#par(font = 1)
marg_probs <- marginalShiftProbsTree(edata)
plot.phylo(marg_probs, cex = 0.45, no.margin = F)
title(sub = "Marginal shift probability")
add.scale.bar(x = 0.5, y = 0.5, font = 1)
add.scale.bar(x = 0.75, y = 0.5, font = 1)
axisPhylo()
#two planel plot for lab report
par(mfrow = c(1,2))
par(mar=c(5, 1.0, 2, 0.0))
#plotPrior("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt", expectedNumberOfShifts = 2)
s <- plot.bammdata(edata, labels = T, font = 3, cex = 0.35, logcolor = T)
title(main = "Mean phenotypic rate", sub = "time before present (my)")
addBAMMlegend(s, location = "left", nTicks = 1)
axisPhylo()
par(font = 1)
marg_probs <- marginalShiftProbsTree(edata)
plot.phylo(marg_probs, cex = 0.45, no.margin = F)
title(main = "Marginal shift probability")
add.scale.bar(x = 0.75, y = 0.5, font = 1)
#two planel plot for lab report
par(mfrow = c(1,2))
par(mar=c(5, 1.0, 2, 0.0))
#plotPrior("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt", expectedNumberOfShifts = 2)
s <- plot.bammdata(edata, labels = T, font = 3, cex = 0.35, logcolor = T)
title(main = "Mean phenotypic rate", sub = "time before present (my)")
addBAMMlegend(s, location = "left", nTicks = 1)
axisPhylo()
par(font = 1)
marg_probs <- marginalShiftProbsTree(edata)
plot.phylo(marg_probs, cex = 0.4, no.margin = F)
title(main = "Marginal shift probability")
add.scale.bar(x = 0.75, y = 0.5, font = 1)
#two planel plot for lab report
par(mfrow = c(1,2))
par(mar=c(5, 1.0, 2, 0.0))
#plotPrior("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt", expectedNumberOfShifts = 2)
s <- plot.bammdata(edata, labels = T, font = 3, cex = 0.35, logcolor = T)
title(main = "Mean phenotypic rate", sub = "time before present (my)")
addBAMMlegend(s, location = "left", nTicks = 1)
axisPhylo()
par(font = 1)
marg_probs <- marginalShiftProbsTree(edata)
plot.phylo(marg_probs, cex = 0.35, no.margin = F)
title(main = "Marginal shift probability")
add.scale.bar(x = 0.75, y = 0.5, font = 1)
#two planel plot for lab report
par(mfrow = c(1,2))
par(mar=c(5, 1.0, 2, 0.0))
#plotPrior("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt", expectedNumberOfShifts = 2)
s <- plot.bammdata(edata, labels = T, font = 3, cex = 0.5, logcolor = T)
title(main = "Mean phenotypic rate", sub = "time before present (my)")
addBAMMlegend(s, location = "left", nTicks = 1)
axisPhylo()
par(font = 1)
marg_probs <- marginalShiftProbsTree(edata)
plot.phylo(marg_probs, cex = 0.5, no.margin = F)
title(main = "Marginal shift probability")
add.scale.bar(x = 0.75, y = 0.5, font = 1)
#two planel plot for lab report
par(mfrow = c(1,2))
par(mar=c(5, 1.0, 2, 0.0))
#plotPrior("2_expected_shifts/cetacean_bamm_homework_mcmc_out.txt", expectedNumberOfShifts = 2)
s <- plot.bammdata(edata, labels = T, font = 3, cex = 0.5, logcolor = T)
title(main = "Mean phenotypic rate", sub = "time before present (my)")
addBAMMlegend(s, location = "left", nTicks = 1)
axisPhylo()
par(font = 1)
marg_probs <- marginalShiftProbsTree(edata)
plot.phylo(marg_probs, cex = 0.5, no.margin = F)
title(main = "Marginal shift probability")
add.scale.bar(x = 0.75, y = 0.5, font = 1)
#### rate through time analysis ####
par(font = 1)
plotRateThroughTime(edata,
ratetype = "auto",
avgCol = "black", intervalCol = "gray80", intervals = c(0.05, 0.95), opacity = 1)
#### rate through time analysis ####
par(font = 1)
plotRateThroughTime(edata,
ratetype = "auto",
avgCol = "black", intervalCol = "gray80", intervals = c(0.05, 0.95), opacity = 1)
diet <- read.csv(file = "whaleDiet.csv", stringsAsFactors = F)
generalist <- diet$generalist
names(generalist) <- diet$species
generalist <- generalist[tree$tip.label]
colvec <- rep("white", length(generalist))
colvec[generalist == 1] <- "black"
plot.phylo(tree, show.tip.label = F, cex = 0.4, no.margin = T)
tiplabels(pch = 21, bg = colvec, cex = 0.8)
res <- FISSE.binary(tree, generalist)
res <- FISSE.binary(tree, generalist)
res
add.scale.bar(x = 0.5, y = 0.5, font = 1)
title(sub = "time before present (my)")
best
marg_probs
marg_probs$edge.length
clade_rates <- getCladeRates(edata)
clade_rates
mean(clade_rates$beta)
getTipRates(edata)
mean(getTipRates(edata))
clade_rates
mean(clade_rates)
quantile(global_rates$beta, c(0.05, 0.95))
quantile(clade_rates$beta, c(0.05, 0.95))
pval_2tailed
tree
